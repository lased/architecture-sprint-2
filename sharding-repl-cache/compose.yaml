name: sharding-repl-cache

x-common:
  mongo: &mongoShared
    image: mongo:latest
    restart: always
    healthcheck:
      interval: 5s
      start_period: 10s

services:
  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: 'mongodb://mongos_router:27018'
      MONGODB_DATABASE_NAME: 'somedb'
      REDIS_URL: 'redis://redis_1:6379'

  # Конфигурационный сервер
  config_server:
    <<: *mongoShared
    container_name: config_server
    ports:
      - '27017:27017'
    volumes:
      - config-data:/data/db
    command:
      [
        'mongod',
        '--configsvr',
        '--replSet',
        'config_server',
        '--bind_ip_all',
        '--port',
        '27017',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27017',
        ]

  # Роутер
  mongos_router:
    <<: *mongoShared
    container_name: mongos_router
    ports:
      - '27018:27018'
    volumes:
      - router-data:/data/db
    command:
      [
        'mongos',
        '--configdb',
        'config_server/config_server:27017',
        '--bind_ip_all',
        '--port',
        '27018',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27018',
        ]

  # Shard 1
  shard1a:
    <<: *mongoShared
    container_name: shard1a
    volumes:
      - shard1a-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27019',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27019',
        ]
  shard1b:
    <<: *mongoShared
    container_name: shard1b
    volumes:
      - shard1b-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27019',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27019',
        ]
  shard1c:
    <<: *mongoShared
    container_name: shard1c
    volumes:
      - shard1c-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard1',
        '--bind_ip_all',
        '--port',
        '27019',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27019',
        ]

  # Shard 2
  shard2a:
    <<: *mongoShared
    container_name: shard2a
    volumes:
      - shard2a-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27020',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27020',
        ]
  shard2b:
    <<: *mongoShared
    container_name: shard2b
    volumes:
      - shard2b-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27020',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27020',
        ]
  shard2c:
    <<: *mongoShared
    container_name: shard2c
    volumes:
      - shard2c-data:/data/db
    command:
      [
        'mongod',
        '--shardsvr',
        '--replSet',
        'shard2',
        '--bind_ip_all',
        '--port',
        '27020',
      ]
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '--port',
          '27020',
        ]
  redis_1:
    image: 'redis:latest'
    container_name: redis_1
    ports:
      - '6379'
    volumes:
      - redis1-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
  redis_2:
    image: 'redis:latest'
    container_name: redis_2
    ports:
      - '6379'
    volumes:
      - redis2-data:/data
      - ./redis/replica.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
  redis_3:
    image: 'redis:latest'
    container_name: redis_3
    ports:
      - '6379'
    volumes:
      - redis3-data:/data
      - ./redis/replica.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']

volumes:
  config-data:
  router-data:
  shard1a-data:
  shard1b-data:
  shard1c-data:
  shard2a-data:
  shard2b-data:
  shard2c-data:
  redis1-data:
  redis2-data:
  redis3-data:
